// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
    provider = "node node_modules/prisma-nestjs-graphql"
    output = "../src/@generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @db.Uuid
  username String @unique
  password String
  comments Comment[]
  posts Post[]
}

model Post {
  id     String  @id @default(uuid()) @db.Uuid
  title  String  
  content  String 
  comments Comment[]
  userId String @db.Uuid
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id  String @id @default(uuid()) @db.Uuid
  text String
  postId String @db.Uuid
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId String @db.Uuid
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id String @id @default(uuid()) @db.Uuid
  email String @unique
  password String
  role Role
}

enum Role {
  MODERATOR
  ADMIN
  SUPERADMIN
}